{"ast":null,"code":"var _jsxFileName = \"/home/raedshafeekdecapolis/go/src/github.com/raed-sh/Blockchain_Council/network2.0/app/client/src/views/newProcess.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewProcess = () => {\n  _s();\n  const [processData, setProcessData] = useState(null);\n  const [response, setResponse] = useState(undefined);\n  const [attrs, setAttrs] = useState([]);\n  const [currentAtt, setCurrentAtt] = useState();\n  const [modal, setModal] = useState(false);\n  const handleData = async () => {\n    const _tx = await fetch('http://localhost:5000/api/newProcess', {\n      method: 'POST',\n      body: JSON.stringify(processData),\n      headers: {\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Accept': '*/*'\n      }\n    });\n    setResponse(await _tx.json());\n  };\n  const handleAddAttr = () => {\n    setAttrs(val => [...val, currentAtt]);\n    setCurrentAtt('');\n    setModal(false);\n  };\n  console.log(attrs);\n  console.log(processData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Attribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"new Attribute\",\n        onChange: e => setCurrentAtt(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddAttr,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), response ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" \", response.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"TxID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \" \", response.txid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setProcessData(null);\n          setResponse(undefined);\n        },\n        children: \"Add New Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"tunaId\",\n        type: \"text\",\n        className: \"feedback-input\",\n        placeholder: \"Reference ID\",\n        onChange: e => setProcessData(val => ({\n          ...val,\n          id: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"id\",\n        type: \"text\",\n        className: \"feedback-input\",\n        placeholder: \"Processed ID\",\n        onChange: e => setProcessData(val => ({\n          ...val,\n          currentID: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), attrs === null || attrs === void 0 ? void 0 : attrs.map((a, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: a,\n        type: \"text\",\n        className: \"feedback-input\",\n        onChange: e => setProcessData(val => ({\n          ...val,\n          [a]: e.target.value\n        }))\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 47\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModal(true),\n        children: \"Add Attribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleData,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(NewProcess, \"Q8GqSxiXm88qbg8ap5a1L92zWEk=\");\n_c = NewProcess;\nvar _c;\n$RefreshReg$(_c, \"NewProcess\");","map":{"version":3,"names":["useState","Link","NewProcess","processData","setProcessData","response","setResponse","undefined","attrs","setAttrs","currentAtt","setCurrentAtt","modal","setModal","handleData","_tx","fetch","method","body","JSON","stringify","headers","json","handleAddAttr","val","console","log","e","target","value","status","txid","id","currentID","map","a","idx"],"sources":["/home/raedshafeekdecapolis/go/src/github.com/raed-sh/Blockchain_Council/network2.0/app/client/src/views/newProcess.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RESPONSE } from \"../types\";\nimport \"./styles.css\";\n\nexport const NewProcess = () => {\n\n  const [processData, setProcessData] = useState(null);\n\n  const [response, setResponse] = useState<RESPONSE | undefined>(undefined);\n  const [attrs, setAttrs] = useState<any>([]);\n  const [currentAtt, setCurrentAtt] = useState<string>();\n  const [modal, setModal] = useState(false);\n\n  const handleData = async () => {\n    const _tx = await fetch('http://localhost:5000/api/newProcess',{\n      method:'POST',\n      body:JSON.stringify(processData),\n      headers: {\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Accept': '*/*',\n    },\n    });\n    setResponse(await _tx.json());\n  };\n\n  const handleAddAttr = () => {\n    setAttrs((val:any) => ([...val, currentAtt]));\n    setCurrentAtt('')\n    setModal(false);\n  }\n\n  console.log(attrs);\n  console.log(processData);\n  return (\n    <div>\n      {modal && \n        <div className=\"modal\">\n          <h2>Add New Attribute</h2>\n          <input type=\"text\" placeholder=\"new Attribute\" onChange={(e) => setCurrentAtt(e.target.value)}/>\n          <button onClick={handleAddAttr}>Add</button>\n        </div>\n        }\n      <h1>New Process</h1>\n\n      {response ?\n       <div className=\"response\">\n        <h2><span>Status:</span> {response.status}</h2>\n        <h3><span>TxID:</span> {response.txid}</h3>\n        <button onClick={() => {\n          setProcessData(null);\n          setResponse(undefined)\n        }}>Add New Process</button>\n        </div>\n        :\n      <div className=\"form\">\n        <input\n          name=\"tunaId\"\n          type=\"text\"\n          className=\"feedback-input\"\n          placeholder=\"Reference ID\"\n          onChange={(e) => setProcessData((val:any) => ({\n            ...val,id:e.target.value\n          }))}/>\n        <input\n          name=\"id\"\n          type=\"text\"\n          className=\"feedback-input\"\n          placeholder=\"Processed ID\"\n          onChange={(e) => setProcessData((val:any) => ({\n            ...val,currentID:e.target.value\n          }))}\n        />\n        {attrs?.map((a:string, idx:number) => <input key={idx} placeholder={a} type={\"text\"} className=\"feedback-input\" onChange={(e) => setProcessData((val:any) => ({\n          ...val, [a]:e.target.value\n        }))}/>)}\n        <button onClick={() => setModal(true)}>Add Attribute</button>\n        <button onClick={handleData}>ADD</button>\n      </div>\n}\n      \n      <Link to=\"/\">Home</Link>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}